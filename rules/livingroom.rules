var Boolean someIsHereAtNine = false 
var Boolean doorIsOpen = false

rule "Radiator living room weekdays on"
when
    Time cron "0 30 17 ? * MON-FRI"
then
{
    if(vHeatingSeason.state == ON && vEverybodyGone == ON) 
    {
        LivingRoom_SetPoint.sendCommand(21)
        postUpdate(HeatingTimeLivingRoom, ON)
        logInfo("RULE", "Living room: Turning the heat up")
    }
    else 
    {
        logInfo("RULE", "Living room: prevented heating - nobody is at home")
    }
} 
end

rule "Radiator living room weekend on"
when
    Time cron "0 0 10 ? * SAT-SUN"
then
{
    if(vHeatingSeason.state == ON && vEverybodyGone != OFF) 
    {
        LivingRoom_SetPoint.sendCommand(21)
        postUpdate(HeatingTimeLivingRoom, ON)
        logInfo("RULE", "Living room: Turning the heat up")
    }
    else 
    {
        logInfo("RULE", "Living room: prevented heating - nobody is at home")
    }
} 
end

rule "Radiator living room off"
when
    Time cron "0 00 23 ? * MON-SUN"
then
{
    postUpdate(HeatingTimeLivingRoom, OFF)

    LivingRoom_SetPoint.sendCommand(16)
    
    if(tvPower == OFF)
        LivingRoom_WallplugTV.sendCommand(OFF)

    logInfo("RULE", "Living room: Turning the heat down")
} 
end

/*rule "TV Lamp"
when 
    Time cron "0,15,30,45 * * ? * MON-SUN"
then
{
    if(vIsNight == true && vEverybodyGone != OFF && tvPower == ON) 
    {
        LivingRoom_WallplugTV.sendCommand(ON)
        logInfo("RULE", "Living room: Switching TV lamp on")
    }
}
end*/

rule "Someone is here weekdays at 9"
when
    Time cron "0 0 9 ? * MON-FRI"
then
{
    someIsHereAtNine = false

    if(vEverybodyGone == OFF) 
    {
        someIsHereAtNine = true
        logInfo("RULE", "Someone is here weekdays at nine")
    }
}
end

rule "Someone is here weekdays"
when
    Time cron "0 30 9 ? * MON-FRI"
then
{
    if(vHeatingSeason.state == ON && vEverybodyGone == OFF && someIsHereAtNine == true) 
    {
        LivingRoom_SetPoint.sendCommand(21)
        postUpdate(HeatingTimeLivingRoom, ON)
        logInfo("RULE", "Some is here weekdays, turn the heat on")
        sendTelegram("bot21", "Jemand scheint zuhause zu sein, ich schalte mal die Heizung an.")

    }
}
end

rule "living room door open"
when
    Item LivingRoom_DoorSensor received update OPEN
then
{
    logInfo("RULE", "living room: door has been opened") 

    var i = 0
    while((i = i + 1 ) < 3) 
    {
        Thread::sleep(60000)
    }

    if(vHeatingSeason.state == ON && LivingRoom_DoorSensor.state == OPEN) 
    {
        LivingRoom_SetPoint.sendCommand(5)
        LivingRoom_ThermMode.sendCommand(0)
        logInfo("RULE", "living room: door is open - turning the heat down") 
    }
    
    Thread::sleep(600000)

    if(LivingRoom_DoorSensor.state == OPEN && localCurrentTemperature.state < 12|°C) 
    {
        sendTelegram("bot21", "Die Tür im Wohnzimmer ist offen, obwohl es draußen kalt ist...")
    }
}
end

rule "living room door closed"
when
    Item LivingRoom_DoorSensor received update CLOSED
then
{
    logInfo("RULE", "living room: door has been closed") 

    LivingRoom_ThermMode.sendCommand(1) // heat on
    if(vHeatingSeason.state == ON && HeatingTimeLivingRoom.state == ON) 
    {
        logInfo("RULE", "living room: temp to 21") 
        LivingRoom_SetPoint.sendCommand(21)
    }
    else 
    {
        LivingRoom_SetPoint.sendCommand(12)
        logInfo("RULE", "living room: temp to 12") 
    }
}
end
